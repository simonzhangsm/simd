/**********************************************************************
 * BIGMATH INSIGHT CONFIDENTIAL
 *
 * Copyright (C) 2016-2018 BIGMATH CORPORATION, All Rights Reserved.
 *
 * @Author: Simon Zhang on 19 Oct 2018
 * @EMail: simon.zhangsm@hotmail.com
 * @Version: $SIMD_LIB_VERSION
 *
 * These source codes are subject to the terms and conditions defined
 * in 'LICENSE', which is part of this source code package. Write to
 * LICENSE@BIGMATH.COM for more authorization requirements, or obtain
 * an entire copy of license agreement at http://bigmath.com/license.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * **********************************************************************/

#ifndef SIMD_CAPABILITIES_H
#define SIMD_CAPABILITIES_H

#ifndef SIMD_H
#error "This file must be included through simd.h"
#endif
#include <bigmath/simd/setup_arch.h>

#if SIMD_USE_SSE2 || SIMD_USE_NEON || SIMD_USE_ALTIVEC || SIMD_USE_MSA
#define SIMD_HAS_INT8_SIMD 1
#define SIMD_HAS_INT16_SIMD 1
#define SIMD_HAS_INT32_SIMD 1
#else
#define SIMD_HAS_INT8_SIMD 0
#define SIMD_HAS_INT16_SIMD 0
#define SIMD_HAS_INT32_SIMD 0
#endif

#if SIMD_USE_SSE2 || SIMD_USE_NEON || SIMD_USE_VSX_207 || SIMD_USE_MSA
#define SIMD_HAS_INT64_SIMD 1
#else
#define SIMD_HAS_INT64_SIMD 0
#endif

#if SIMD_USE_SSE2 || SIMD_USE_NEON_FLT_SP || (SIMD_USE_NEON && SIMD_64_BITS) || SIMD_USE_ALTIVEC || SIMD_USE_MSA
#define SIMD_HAS_FLOAT32_SIMD 1
#else
#define SIMD_HAS_FLOAT32_SIMD 0
#endif

#if SIMD_USE_SSE2 || (SIMD_USE_NEON && SIMD_64_BITS) || SIMD_USE_VSX_206 || SIMD_USE_MSA
#define SIMD_HAS_FLOAT64_SIMD 1
#else
#define SIMD_HAS_FLOAT64_SIMD 0
#endif

#if SIMD_USE_NULL || SIMD_USE_AVX512F || (SIMD_USE_NEON && SIMD_64_BITS) || SIMD_USE_VSX_206 || SIMD_USE_MSA
#define SIMD_HAS_FLOAT64_TO_UINT32_CONVERSION 1
#else
#define SIMD_HAS_FLOAT64_TO_UINT32_CONVERSION 0
#endif

#if SIMD_USE_NULL || SIMD_USE_AVX512DQ || (SIMD_USE_NEON && SIMD_64_BITS) || SIMD_USE_VSX_207 || SIMD_USE_MSA
#define SIMD_HAS_INT64_TO_FLOAT64_CONVERSION 1
#define SIMD_HAS_INT64_TO_FLOAT32_CONVERSION 1
#define SIMD_HAS_UINT64_TO_FLOAT64_CONVERSION 1
#define SIMD_HAS_UINT64_TO_FLOAT32_CONVERSION 1

#define SIMD_HAS_FLOAT32_TO_INT64_CONVERSION 1
#define SIMD_HAS_FLOAT32_TO_UINT64_CONVERSION 1

#define SIMD_HAS_FLOAT64_TO_INT64_CONVERSION 1
#define SIMD_HAS_FLOAT64_TO_UINT64_CONVERSION 1
#else
#define SIMD_HAS_INT64_TO_FLOAT64_CONVERSION 0
#define SIMD_HAS_INT64_TO_FLOAT32_CONVERSION 0
#define SIMD_HAS_UINT64_TO_FLOAT64_CONVERSION 0
#define SIMD_HAS_UINT64_TO_FLOAT32_CONVERSION 0

#define SIMD_HAS_FLOAT32_TO_INT64_CONVERSION 0
#define SIMD_HAS_FLOAT32_TO_UINT64_CONVERSION 0

#define SIMD_HAS_FLOAT64_TO_INT64_CONVERSION 0
#define SIMD_HAS_FLOAT64_TO_UINT64_CONVERSION 0
#endif

#if SIMD_USE_NULL || SIMD_USE_SSSE3 || SIMD_USE_NEON || SIMD_USE_ALTIVEC || SIMD_USE_MSA
#define SIMD_HAS_INT8_SHIFT_L_BY_VECTOR 1
#define SIMD_HAS_UINT8_SHIFT_L_BY_VECTOR 1
#define SIMD_HAS_INT16_SHIFT_L_BY_VECTOR 1
#define SIMD_HAS_UINT16_SHIFT_L_BY_VECTOR 1
#else
#define SIMD_HAS_INT8_SHIFT_L_BY_VECTOR 0
#define SIMD_HAS_UINT8_SHIFT_L_BY_VECTOR 0
#define SIMD_HAS_INT16_SHIFT_L_BY_VECTOR 0
#define SIMD_HAS_UINT16_SHIFT_L_BY_VECTOR 0
#endif

#if SIMD_USE_NULL || SIMD_USE_SSE2 || SIMD_USE_NEON || SIMD_USE_ALTIVEC || SIMD_USE_MSA
#define SIMD_HAS_INT32_SHIFT_L_BY_VECTOR 1
#define SIMD_HAS_UINT32_SHIFT_L_BY_VECTOR 1
#else
#define SIMD_HAS_INT32_SHIFT_L_BY_VECTOR 0
#define SIMD_HAS_UINT32_SHIFT_L_BY_VECTOR 0
#endif

#if SIMD_USE_NULL || SIMD_USE_SSSE3 || SIMD_USE_NEON || SIMD_USE_ALTIVEC || SIMD_USE_MSA
#define SIMD_HAS_INT8_SHIFT_R_BY_VECTOR 1
#define SIMD_HAS_UINT8_SHIFT_R_BY_VECTOR 1
#define SIMD_HAS_UINT16_SHIFT_R_BY_VECTOR 1
#else
#define SIMD_HAS_INT8_SHIFT_R_BY_VECTOR 0
#define SIMD_HAS_UINT8_SHIFT_R_BY_VECTOR 0
#define SIMD_HAS_UINT16_SHIFT_R_BY_VECTOR 0
#endif

#if SIMD_USE_NULL || SIMD_USE_AVX512BW || SIMD_USE_NEON || SIMD_USE_ALTIVEC || SIMD_USE_MSA
#define SIMD_HAS_INT16_SHIFT_R_BY_VECTOR 1
#else
#define SIMD_HAS_INT16_SHIFT_R_BY_VECTOR 0
#endif

#if SIMD_USE_NULL || SIMD_USE_SSE2 || SIMD_USE_NEON || SIMD_USE_ALTIVEC || SIMD_USE_MSA
#define SIMD_HAS_INT32_SHIFT_R_BY_VECTOR 1
#define SIMD_HAS_UINT32_SHIFT_R_BY_VECTOR 1
#else
#define SIMD_HAS_INT32_SHIFT_R_BY_VECTOR 0
#define SIMD_HAS_UINT32_SHIFT_R_BY_VECTOR 0
#endif

#endif
